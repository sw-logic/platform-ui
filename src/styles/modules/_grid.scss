@import "../variables";

$columns: 1, 2, 3, 4, 5, 6, 7, 8;

@each $col in $columns {
  .grid-cols-#{$col} {
    grid-template-columns: repeat(#{$col}, 1fr) !important;
  }
}

@each $breakpoint, $breakpoint-width in $grid-breakpoints {
  @media (min-width: #{$breakpoint-width}) {
    @each $col in $columns {
      .grid-cols-#{$breakpoint}-#{$col} {
        grid-template-columns: repeat(#{$col}, 1fr) !important;
      }
    }
  }
}

.book-grid {
  display: grid;
  grid-template-rows: repeat(var(--bs-rows, 1), 1fr);
  grid-template-columns: repeat(1, 1fr);
  gap: var(--bs-gap, 32px);

  @media (min-width: map-get($grid-breakpoints, sm)) {
    grid-template-columns: repeat(3, 1fr);
  }
  @media (min-width: map-get($grid-breakpoints, md)) {
    grid-template-columns: repeat(3, 1fr);
  }
  @media (min-width: map-get($grid-breakpoints, lg)) {
    grid-template-columns: repeat(4, 1fr);
  }
  @media (min-width: map-get($grid-breakpoints, xl)) {
    grid-template-columns: repeat(5, 1fr);
  }

  &.book-grid-6 {
    @media (min-width: map-get($grid-breakpoints, sm)) {
      grid-template-columns: repeat(3, 1fr);
    }
    @media (min-width: map-get($grid-breakpoints, md)) {
      grid-template-columns: repeat(4, 1fr);
    }
    @media (min-width: map-get($grid-breakpoints, lg)) {
      grid-template-columns: repeat(5, 1fr);
    }
    @media (min-width: map-get($grid-breakpoints, xl)) {
      grid-template-columns: repeat(6, 1fr);
    }
  }
}
